{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/harendra_jagariya/Desktop/SherwinWilliams/Frontend/src/components/UploadImage.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nconst ImageUploader = () => {\n  const [image, setImage] = useState(null);\n  const [mask, setMask] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleFileChange = (event) => {\n    setImage(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!image) {\n      setError(\"Please select an image.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"image\", image); // âœ… Key should match multer middleware\n\n    setLoading(true);\n    setError(\"\");\n\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/segment\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n\n      setMask(response.data.mask);\n    } catch (err) {\n      console.error(\"Upload Error:\", err);\n      setError(\"Segmentation failed.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload an Image for Segmentation</h2>\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n      <button onClick={handleUpload} disabled={loading}>\n        {loading ? \"Uploading...\" : \"Upload & Segment\"}\n      </button>\n\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      {mask && (\n        <div>\n          <h3>Segmentation Mask:</h3>\n          <pre>{JSON.stringify(mask, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ImageUploader;"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,gBAAgB;IACpB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,mBAAmB,CAAC;QACxB,SAAS,MAAM,MAAM,CAAC,KAAK,CAAC,EAAE;IAChC;IAEA,MAAM,eAAe;QACnB,IAAI,CAAC,OAAO;YACV,SAAS;YACT;QACF;QAEA,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,SAAS,QAAQ,uCAAuC;QAExE,WAAW;QACX,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,qCAAqC,UAAU;gBAC/E,SAAS;oBAAE,gBAAgB;gBAAsB;YACnD;YAEA,QAAQ,SAAS,IAAI,CAAC,IAAI;QAC5B,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAM,MAAK;gBAAO,QAAO;gBAAU,UAAU;;;;;;0BAC9C,8OAAC;gBAAO,SAAS;gBAAc,UAAU;0BACtC,UAAU,iBAAiB;;;;;;YAG7B,uBAAS,8OAAC;gBAAE,OAAO;oBAAE,OAAO;gBAAM;0BAAI;;;;;;YAEtC,sBACC,8OAAC;;kCACC,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCAAK,KAAK,SAAS,CAAC,MAAM,MAAM;;;;;;;;;;;;;;;;;;AAK3C;uCAEe"}},
    {"offset": {"line": 194, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///Users/harendra_jagariya/Desktop/SherwinWilliams/Frontend/src/app/page.tsx"],"sourcesContent":["// src/app/page.tsx\nimport UploadImage from '../components/UploadImage';\n\nexport default function Home() {\n  return (\n    <main className=\"flex min-h-screen flex-col items-center justify-center p-24\">\n      <h1 className=\"text-4xl font-bold mb-8\">AI Virtual Painter</h1>\n      <UploadImage />\n    </main>\n  );\n}"],"names":[],"mappings":"AAAA,mBAAmB;;;;;AACnB;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC,iIAAA,CAAA,UAAW;;;;;;;;;;;AAGlB"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}